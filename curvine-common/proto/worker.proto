syntax="proto2";
package proto;

option java_package = "io.curvine.proto";
option java_multiple_files = true;
option java_outer_classname = "WorkerProto";

import "common.proto";

// worker related
// Create block request
message BlockWriteRequest {
    required int64 id = 1;
    required int64 off = 2;
    required int64 len = 3;
    required FileTypeProto file_type = 4 [default = FILE_TYPE_PROTO_FILE];
    required StorageTypeProto storage_type = 5 [default = STORAGE_TYPE_PROTO_DISK];
    required bool short_circuit = 6 [default = false];
    required string client_name = 7 [default = ""];
    required int32 chunk_size = 8;

    required bool pipeline = 9;
    repeated WorkerAddressProto locations = 10;
    required int32 location_index = 11;
}

message BlockWriteResponse {
    required int64 id = 1;
    optional string path = 2;
    required int64 off = 3;
    required int64 len = 4;
    required StorageTypeProto storage_type = 5;
}

// if the pipeline is enabled, this could be retrieved by the client side
message DataWritingHeader {
    repeated int32 failure_location_index = 6;
    repeated string failure_location_message = 7;
}

message BlockReadRequest {
    required int64 id = 1;
    required int64 off = 2;
    required int64 len = 3;
    required int32 chunk_size = 4;
    required bool short_circuit = 5 [default = false];
    required bool enable_read_ahead = 8 [default = true];
    required int64 read_ahead_len = 9 [default = 4194304];
    required int64 drop_cache_len = 10 [default = 1048576];
}

message BlockReadResponse {
    required int64 id = 1;
    required int64 len = 2;
    optional string path = 3;
    required StorageTypeProto storage_type = 4;
}

message DataHeaderProto {
    required int64 offset = 1;
    required bool flush = 2;
    required bool is_last = 3;
}

message DeleteBlockCmdProto {
    repeated int64 blocks = 3;
}

message WorkerCommandProto {
    optional DeleteBlockCmdProto delete_block = 1;
}

// Worker registration, heartbeat request.
message WorkerHeartbeatRequest {
    required string cluster_id = 1;
    required uint32 worker_id = 2;
    required int64 fs_ctime = 3;
    required WorkerAddressProto address = 4;
    required int32 failed_dirs = 5;
    required HeartbeatStatusProto status = 6;
    required string software_version = 7 [default = ""];

    repeated StorageInfoProto storages = 8;
    repeated BlockReportInfoProto blocks = 9;
}

message WorkerHeartbeatResponse {
    repeated WorkerCommandProto cmds = 1;
}

enum BlockReportStatusProto {
    BLOCK_REPORT_STATUS_PROTO_FINALIZED = 1;
    BLOCK_REPORT_STATUS_PROTO_WRITING = 2;
    BLOCK_REPORT_STATUS_PROTO_DELETED = 3;
}

message BlockReportInfoProto {
    required int64 id = 1;
    required BlockReportStatusProto status = 2;
    required int64 block_size = 3;
    required StorageTypeProto storage_type = 4;
}

// Report the block information to the masterã€‚
message BlockReportListRequest {
    required string cluster_id = 1;
    required uint32 worker_id = 2;
    required bool full_report = 3;
    required uint64 total_len = 4;
    repeated BlockReportInfoProto blocks = 5;
}

message BlockReportListResponse {
    repeated WorkerCommandProto cmds = 1;
}